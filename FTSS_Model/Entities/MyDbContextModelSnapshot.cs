// <auto-generated />
using System;
using FTSS_Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FTSS_Model.Entities
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FTSS_Model.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3213E83F0C62F6B8");

                    b.HasIndex("UserId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cartId");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__CartItem__3213E83F1D197DF2");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83FABBB5B7D");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("LinkImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("linkImage");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Image__3213E83F93AF64CE");

                    b.HasIndex("ProductId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<Guid?>("IssueCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("issueCategoryId");

                    b.Property<string>("IssueName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("issueName");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Issue__3213E83F6570BFB4");

                    b.HasIndex("IssueCategoryId");

                    b.ToTable("Issue", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.IssueCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("IssueCategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("issueCategoryName");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.HasKey("Id")
                        .HasName("PK__IssueCat__3213E83FC72972A7");

                    b.ToTable("IssueCategory", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.IssueProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<Guid>("IssueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("issueId");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.HasKey("Id")
                        .HasName("PK__IssuePro__3213E83F57A60470");

                    b.HasIndex("IssueId");

                    b.HasIndex("ProductId");

                    b.ToTable("IssueProduct", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.MaintenanceSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("ScheduleDate")
                        .HasColumnType("datetime")
                        .HasColumnName("scheduleDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Maintena__3213E83FC4839623");

                    b.HasIndex("UserId");

                    b.ToTable("MaintenanceSchedule", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.MaintenanceTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AssignedTo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("assignedTo");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<Guid>("MaintenanceScheduleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("maintenanceScheduleId");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taskDescription");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("taskName");

                    b.HasKey("Id")
                        .HasName("PK__Maintena__3213E83FCE21436C");

                    b.HasIndex("MaintenanceScheduleId");

                    b.ToTable("MaintenanceTask", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Model3D", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.HasKey("Id")
                        .HasName("PK__Model3D__3213E83F2A782F71");

                    b.ToTable("Model3D", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalPrice");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("voucherId");

                    b.HasKey("Id")
                        .HasName("PK__Order__3213E83F92D6C47E");

                    b.HasIndex("UserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3213E83FEA9FE343");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Otp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amountPaid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("paymentDate");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentMethod");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("paymentStatus");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83F303D8858");

                    b.HasIndex("OrderId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("categoryId");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<Guid?>("Model3Did")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("model3DId");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("productName");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("size");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83F7FF555F8");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Model3Did");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifyDate");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("SetupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("setupName");

                    b.HasKey("Id")
                        .HasName("PK__SetupPac__3213E83FD295E5F3");

                    b.ToTable("SetupPackage", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackageDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<Guid>("SetupPackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("setupPackageId");

                    b.HasKey("Id")
                        .HasName("PK__SetupPac__3213E83F96E32B1D");

                    b.HasIndex("ProductId");

                    b.HasIndex("SetupPackageId");

                    b.ToTable("SetupPackageDetail", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DeliveryAt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("deliveryAt");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deliveryDate");

                    b.Property<string>("DeliveryStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("deliveryStatus");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("shippingAddress");

                    b.Property<decimal?>("ShippingFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("shippingFee");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("trackingNumber");

                    b.HasKey("Id")
                        .HasName("PK__Shipment__3213E83F5C6D460A");

                    b.HasIndex("OrderId");

                    b.ToTable("Shipment", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<Guid>("IssueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("issueId");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifiedDate");

                    b.Property<string>("SolutionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("solutionName");

                    b.HasKey("Id")
                        .HasName("PK__Solution__3213E83FC9A9C4B7");

                    b.HasIndex("IssueId");

                    b.ToTable("Solution", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("categoryId");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subCategoryName");

                    b.HasKey("Id")
                        .HasName("PK__SubCateg__3213E83FA2ADCBD7");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83FF34271D4");

                    b.HasIndex(new[] { "Email" }, "UQ__User__AB6E6164211BC737")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("voucherCode");

                    b.HasKey("Id")
                        .HasName("PK__Voucher__3213E83F7951091C");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Cart", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__userId__59063A47");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.CartItem", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK__CartItem__cartId__5EBF139D");

                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__CartItem__produc__5DCAEF64");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Image", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Image__productId__6D0D32F4");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Issue", b =>
                {
                    b.HasOne("FTSS_Model.Entities.IssueCategory", "IssueCategory")
                        .WithMany("Issues")
                        .HasForeignKey("IssueCategoryId")
                        .HasConstraintName("FK_Issue_IssueCategory");

                    b.Navigation("IssueCategory");
                });

            modelBuilder.Entity("FTSS_Model.Entities.IssueProduct", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Issue", "Issue")
                        .WithMany("IssueProducts")
                        .HasForeignKey("IssueId")
                        .IsRequired()
                        .HasConstraintName("FK__IssueProd__issue__05D8E0BE");

                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("IssueProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__IssueProd__produ__04E4BC85");

                    b.Navigation("Issue");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.MaintenanceSchedule", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("MaintenanceSchedules")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Maintenan__userI__3E52440B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.MaintenanceTask", b =>
                {
                    b.HasOne("FTSS_Model.Entities.MaintenanceSchedule", "MaintenanceSchedule")
                        .WithMany("MaintenanceTasks")
                        .HasForeignKey("MaintenanceScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__Maintenan__maint__4316F928");

                    b.Navigation("MaintenanceSchedule");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Order", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__userId__6383C8BA");

                    b.HasOne("FTSS_Model.Entities.Voucher", "Voucher")
                        .WithMany("Orders")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_Order_Voucher");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("FTSS_Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__order__6754599E");

                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__produ__68487DD7");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Otp", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Payment", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__orderId__787EE5A0");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Product", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__categor__5070F446");

                    b.HasOne("FTSS_Model.Entities.Model3D", "Model3D")
                        .WithMany("Products")
                        .HasForeignKey("Model3Did")
                        .HasConstraintName("FK_Product_Model3D");

                    b.Navigation("Category");

                    b.Navigation("Model3D");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackageDetail", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("SetupPackageDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__SetupPack__produ__1332DBDC");

                    b.HasOne("FTSS_Model.Entities.SetupPackage", "SetupPackage")
                        .WithMany("SetupPackageDetails")
                        .HasForeignKey("SetupPackageId")
                        .IsRequired()
                        .HasConstraintName("FK__SetupPack__setup__14270015");

                    b.Navigation("Product");

                    b.Navigation("SetupPackage");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Shipment", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("Shipments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Shipment__orderI__74AE54BC");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Solution", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Issue", "Issue")
                        .WithMany("Solutions")
                        .HasForeignKey("IssueId")
                        .IsRequired()
                        .HasConstraintName("FK__Solution__issueI__0A9D95DB");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SubCategory", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__SubCatego__categ__4BAC3F29");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Issue", b =>
                {
                    b.Navigation("IssueProducts");

                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("FTSS_Model.Entities.IssueCategory", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("FTSS_Model.Entities.MaintenanceSchedule", b =>
                {
                    b.Navigation("MaintenanceTasks");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Model3D", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Images");

                    b.Navigation("IssueProducts");

                    b.Navigation("OrderDetails");

                    b.Navigation("SetupPackageDetails");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackage", b =>
                {
                    b.Navigation("SetupPackageDetails");
                });

            modelBuilder.Entity("FTSS_Model.Entities.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("MaintenanceSchedules");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Voucher", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}

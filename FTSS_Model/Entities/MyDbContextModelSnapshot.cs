// <auto-generated />
using System;
using FTSS_Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FTSS_Model.Entities
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FTSS_Model.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BookingCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bookingCode");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<bool?>("IsAssigned")
                        .HasColumnType("bit")
                        .HasColumnName("isAssigned");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phoneNumber");

                    b.Property<DateTime?>("ScheduleDate")
                        .HasColumnType("datetime")
                        .HasColumnName("scheduleDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("totalPrice");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Maintena__3213E83F2B701192");

                    b.HasIndex(new[] { "BookingCode" }, "idx_booking_bookingcode")
                        .IsUnique()
                        .HasFilter("[bookingCode] IS NOT NULL");

                    b.HasIndex(new[] { "OrderId" }, "idx_booking_orderid");

                    b.HasIndex(new[] { "ScheduleDate" }, "idx_booking_scheduledate");

                    b.HasIndex(new[] { "Status" }, "idx_booking_status");

                    b.HasIndex(new[] { "UserId" }, "idx_booking_userid");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.BookingDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bookingId");

                    b.Property<Guid>("ServicePackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("servicePackageId");

                    b.HasKey("Id")
                        .HasName("PK__BookingD__3213E83F8426CEBB");

                    b.HasIndex(new[] { "BookingId" }, "idx_bookingdetail_bookingid");

                    b.HasIndex(new[] { "ServicePackageId" }, "idx_bookingdetail_servicepackageid");

                    b.ToTable("BookingDetail", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3213E83F39ED5C43");

                    b.HasIndex(new[] { "CreateDate" }, "idx_cart_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_cart_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_cart_modifydate");

                    b.HasIndex(new[] { "Status" }, "idx_cart_status");

                    b.HasIndex(new[] { "UserId" }, "idx_cart_userid");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cartId");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__CartItem__3213E83F04624BAE");

                    b.HasIndex(new[] { "CartId" }, "idx_cartitem_cartid");

                    b.HasIndex(new[] { "CreateDate" }, "idx_cartitem_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_cartitem_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_cartitem_modifydate");

                    b.HasIndex(new[] { "ProductId" }, "idx_cartitem_productid");

                    b.HasIndex(new[] { "Status" }, "idx_cartitem_status");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("LinkImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("default_image_link")
                        .HasColumnName("linkImage");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83F328E5121");

                    b.HasIndex(new[] { "CategoryName" }, "idx_category_categoryname");

                    b.HasIndex(new[] { "CreateDate" }, "idx_category_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_category_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_category_modifydate");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("LinkImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("linkImage");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Image__3213E83F222143F7");

                    b.HasIndex(new[] { "CreateDate" }, "idx_image_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_image_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_image_modifydate");

                    b.HasIndex(new[] { "ProductId" }, "idx_image_productid");

                    b.HasIndex(new[] { "Status" }, "idx_image_status");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<Guid?>("IssueCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("issueCategoryId");

                    b.Property<string>("IssueImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("issueImage");

                    b.Property<string>("IssueName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("issueName");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3213E83F8331A313");

                    b.HasIndex(new[] { "CreateDate" }, "idx_issue_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_issue_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "IssueCategoryId" }, "idx_issue_issuecategoryid");

                    b.HasIndex(new[] { "IssueName" }, "idx_issue_issuename");

                    b.HasIndex(new[] { "ModifiedDate" }, "idx_issue_modifieddate");

                    b.ToTable("Issue", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.IssueCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("IssueCategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("issueCategoryName");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.HasKey("Id")
                        .HasName("PK__IssueCat__3213E83F148E615E");

                    b.HasIndex(new[] { "CreateDate" }, "idx_issuecategory_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_issuecategory_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_issuecategory_modifydate");

                    b.HasIndex(new[] { "IssueCategoryName" }, "idx_issuecategory_name");

                    b.ToTable("IssueCategory", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bookingId");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<string>("MissionDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("missionDescription");

                    b.Property<string>("MissionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("missionName");

                    b.Property<DateTime?>("MissionSchedule")
                        .HasColumnType("datetime")
                        .HasColumnName("missionSchedule");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__Maintena__3213E83F3561400D");

                    b.HasIndex(new[] { "BookingId" }, "idx_mission_bookingid");

                    b.HasIndex(new[] { "IsDelete" }, "idx_mission_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "MissionSchedule" }, "idx_mission_missionschedule");

                    b.HasIndex(new[] { "OrderId" }, "idx_mission_orderid");

                    b.HasIndex(new[] { "Status" }, "idx_mission_status");

                    b.HasIndex(new[] { "Userid" }, "idx_mission_userid");

                    b.ToTable("Mission", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<bool?>("IsAssigned")
                        .HasColumnType("bit")
                        .HasColumnName("isAssigned");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<bool?>("IsEligible")
                        .HasColumnType("bit")
                        .HasColumnName("isEligible");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("OrderCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("orderCode")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("recipientName");

                    b.Property<Guid?>("SetupPackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("setupPackageId");

                    b.Property<decimal?>("Shipcost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("shipcost");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalPrice");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("voucherId");

                    b.HasKey("Id")
                        .HasName("PK__Order__3213E83F7F61BE3E");

                    b.HasIndex(new[] { "CreateDate" }, "idx_order_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_order_isdelete")
                        .HasFilter("IsDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_order_modifydate");

                    b.HasIndex(new[] { "OrderCode" }, "idx_order_ordercode")
                        .IsUnique()
                        .HasFilter("[orderCode] IS NOT NULL");

                    b.HasIndex(new[] { "SetupPackageId" }, "idx_order_setuppackageid");

                    b.HasIndex(new[] { "Status" }, "idx_order_status");

                    b.HasIndex(new[] { "UserId" }, "idx_order_userid");

                    b.HasIndex(new[] { "UserId", "Status" }, "idx_order_userid_status");

                    b.HasIndex(new[] { "VoucherId" }, "idx_order_voucherid");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3213E83FB633A48D");

                    b.HasIndex(new[] { "OrderId" }, "idx_orderdetail_orderid");

                    b.HasIndex(new[] { "ProductId" }, "idx_orderdetail_productid");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Otp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_Otps_UserId");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amountPaid");

                    b.Property<string>("BankHolder")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bankHolder");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bankName");

                    b.Property<string>("BankNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bankNumber");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bookingId");

                    b.Property<long?>("OrderCode")
                        .HasColumnType("bigint")
                        .HasColumnName("orderCode");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("paymentDate");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentMethod");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("paymentStatus");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83F00EF1B30");

                    b.HasIndex(new[] { "BookingId" }, "idx_payment_bookingid");

                    b.HasIndex(new[] { "OrderCode" }, "idx_payment_ordercode");

                    b.HasIndex(new[] { "OrderId" }, "idx_payment_orderid");

                    b.HasIndex(new[] { "PaymentDate" }, "idx_payment_paymentdate");

                    b.HasIndex(new[] { "PaymentStatus" }, "idx_payment_paymentstatus");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("productName");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("size");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid?>("SubCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SubCategoryID");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83F4D0F84D3");

                    b.HasIndex(new[] { "CreateDate" }, "idx_product_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_product_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_product_modifydate");

                    b.HasIndex(new[] { "ProductName" }, "idx_product_productname");

                    b.HasIndex(new[] { "Status" }, "idx_product_status");

                    b.HasIndex(new[] { "SubCategoryId" }, "idx_product_subcategoryid");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.ServicePackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serviceName");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__ServiceP__3213E83FA4E5AED8");

                    b.HasIndex(new[] { "IsDelete" }, "idx_servicepackage_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ServiceName" }, "idx_servicepackage_servicename");

                    b.HasIndex(new[] { "Status" }, "idx_servicepackage_status");

                    b.ToTable("ServicePackage", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifyDate");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("SetupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("setupName");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CreateDate" }, "idx_setuppackage_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_setuppackage_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_setuppackage_modifydate");

                    b.HasIndex(new[] { "Status" }, "idx_setuppackage_status");

                    b.HasIndex(new[] { "Userid" }, "idx_setuppackage_userid");

                    b.ToTable("SetupPackage", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackageDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("productId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<Guid?>("SetupPackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("setupPackageId");

                    b.HasKey("Id")
                        .HasName("PK__SetupPac__3213E83F9D52720B");

                    b.HasIndex(new[] { "ProductId" }, "idx_setuppackagedetail_productid");

                    b.HasIndex(new[] { "SetupPackageId" }, "idx_setuppackagedetail_setuppackageid");

                    b.ToTable("SetupPackageDetail", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DeliveryAt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("deliveryAt");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deliveryDate");

                    b.Property<string>("DeliveryStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("deliveryStatus");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("shippingAddress");

                    b.Property<decimal?>("ShippingFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("shippingFee");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("trackingNumber");

                    b.HasKey("Id")
                        .HasName("PK__Shipment__3213E83FF6F447A2");

                    b.HasIndex(new[] { "DeliveryDate" }, "idx_shipment_deliverydate");

                    b.HasIndex(new[] { "DeliveryStatus" }, "idx_shipment_deliverystatus");

                    b.HasIndex(new[] { "OrderId" }, "idx_shipment_orderid");

                    b.HasIndex(new[] { "TrackingNumber" }, "idx_shipment_trackingnumber");

                    b.ToTable("Shipment", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<Guid>("IssueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("issueId");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifiedDate");

                    b.Property<string>("SolutionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("solutionName");

                    b.HasKey("Id")
                        .HasName("PK__Solution__3213E83FE0CC4A1A");

                    b.HasIndex(new[] { "CreateDate" }, "idx_solution_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_solution_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "IssueId" }, "idx_solution_issueid");

                    b.HasIndex(new[] { "ModifiedDate" }, "idx_solution_modifieddate");

                    b.HasIndex(new[] { "SolutionName" }, "idx_solution_solutionname");

                    b.ToTable("Solution", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SolutionProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Solution__3214EC07976FE61E");

                    b.HasIndex(new[] { "CreateDate" }, "idx_solutionproduct_createdate");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_solutionproduct_modifydate");

                    b.HasIndex(new[] { "ProductId" }, "idx_solutionproduct_productid");

                    b.HasIndex(new[] { "SolutionId" }, "idx_solutionproduct_solutionid");

                    b.ToTable("SolutionProduct", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("categoryId");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subCategoryName");

                    b.HasKey("Id")
                        .HasName("PK__SubCateg__3213E83F011365E6");

                    b.HasIndex(new[] { "CategoryId" }, "idx_subcategory_categoryid");

                    b.HasIndex(new[] { "CreateDate" }, "idx_subcategory_createdate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_subcategory_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_subcategory_modifydate");

                    b.HasIndex(new[] { "SubCategoryName" }, "idx_subcategory_subcategoryname");

                    b.ToTable("SubCategory", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("CityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cityId");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DistrictId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("districtId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("fullName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("gender");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83FF34271D4");

                    b.HasIndex(new[] { "CreateDate" }, "idx_user_createdate");

                    b.HasIndex(new[] { "Email" }, "idx_user_email")
                        .IsUnique();

                    b.HasIndex(new[] { "IsDelete" }, "idx_user_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_user_modifydate");

                    b.HasIndex(new[] { "Role" }, "idx_user_role");

                    b.HasIndex(new[] { "Status" }, "idx_user_status");

                    b.HasIndex(new[] { "UserName" }, "idx_user_username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("No description");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("discount");

                    b.Property<string>("DiscountType")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("discountType")
                        .IsFixedLength();

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiryDate");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDelete");

                    b.Property<decimal?>("MaximumOrderValue")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("maximumOrderValue");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifyDate");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("voucherCode");

                    b.HasKey("Id")
                        .HasName("PK__Voucher__3213E83F2B4BD0F3");

                    b.HasIndex(new[] { "CreateDate" }, "idx_voucher_createdate");

                    b.HasIndex(new[] { "ExpiryDate" }, "idx_voucher_expirydate");

                    b.HasIndex(new[] { "IsDelete" }, "idx_voucher_isdelete")
                        .HasFilter("isDelete = 0");

                    b.HasIndex(new[] { "ModifyDate" }, "idx_voucher_modifydate");

                    b.HasIndex(new[] { "Status" }, "idx_voucher_status");

                    b.HasIndex(new[] { "VoucherCode" }, "idx_voucher_vouchercode")
                        .IsUnique();

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("FTSS_Model.Entities.Booking", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("Bookings")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Booking_Order");

                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Booking_User");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.BookingDetail", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingDetail_Booking");

                    b.HasOne("FTSS_Model.Entities.ServicePackage", "ServicePackage")
                        .WithMany("BookingDetails")
                        .HasForeignKey("ServicePackageId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingDetail_ServicePackage");

                    b.Navigation("Booking");

                    b.Navigation("ServicePackage");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Cart", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__userId__59063A47");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.CartItem", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK__CartItem__cartId__1DB06A4F");

                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__CartItem__produc__0B91BA14");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Image", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Image__productId__0C85DE4D");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Issue", b =>
                {
                    b.HasOne("FTSS_Model.Entities.IssueCategory", "IssueCategory")
                        .WithMany("Issues")
                        .HasForeignKey("IssueCategoryId")
                        .HasConstraintName("FK_Issue_IssueCategory");

                    b.Navigation("IssueCategory");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Mission", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Booking", "Booking")
                        .WithMany("Missions")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_Mission_Booking");

                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("Missions")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Mission_Order");

                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Missions")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK_MaintenanceTask_User");

                    b.Navigation("Booking");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Order", b =>
                {
                    b.HasOne("FTSS_Model.Entities.SetupPackage", "SetupPackage")
                        .WithMany("Orders")
                        .HasForeignKey("SetupPackageId")
                        .HasConstraintName("FK_Order_SetupPackage");

                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Order__userId__6383C8BA");

                    b.HasOne("FTSS_Model.Entities.Voucher", "Voucher")
                        .WithMany("Orders")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_Order_Voucher");

                    b.Navigation("SetupPackage");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("FTSS_Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__order__14270015");

                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__produ__151B244E");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Otp", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("Otps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Payment", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_Payment_Booking");

                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Payment__orderId__17036CC0");

                    b.Navigation("Booking");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Product", b =>
                {
                    b.HasOne("FTSS_Model.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .HasConstraintName("FK_Product_SubCategory");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackage", b =>
                {
                    b.HasOne("FTSS_Model.Entities.User", "User")
                        .WithMany("SetupPackages")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK_SetupPackage_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackageDetail", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("SetupPackageDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__SetupPack__produ__19DFD96B");

                    b.HasOne("FTSS_Model.Entities.SetupPackage", "SetupPackage")
                        .WithMany("SetupPackageDetails")
                        .HasForeignKey("SetupPackageId")
                        .HasConstraintName("FK_SetupPackageDetail_SetupPackage");

                    b.Navigation("Product");

                    b.Navigation("SetupPackage");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Shipment", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Order", "Order")
                        .WithMany("Shipments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Shipment__orderI__1BC821DD");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Solution", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Issue", "Issue")
                        .WithMany("Solutions")
                        .HasForeignKey("IssueId")
                        .IsRequired()
                        .HasConstraintName("FK__Solution__issueI__6BAEFA67");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SolutionProduct", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Product", "Product")
                        .WithMany("SolutionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SolutionP__Produ__7DCDAAA2");

                    b.HasOne("FTSS_Model.Entities.Solution", "Solution")
                        .WithMany("SolutionProducts")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SolutionP__Solut__7CD98669");

                    b.Navigation("Product");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SubCategory", b =>
                {
                    b.HasOne("FTSS_Model.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_SubCategory_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Booking", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("Missions");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Issue", b =>
                {
                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("FTSS_Model.Entities.IssueCategory", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Order", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Missions");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Images");

                    b.Navigation("OrderDetails");

                    b.Navigation("SetupPackageDetails");

                    b.Navigation("SolutionProducts");
                });

            modelBuilder.Entity("FTSS_Model.Entities.ServicePackage", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SetupPackage", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SetupPackageDetails");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Solution", b =>
                {
                    b.Navigation("SolutionProducts");
                });

            modelBuilder.Entity("FTSS_Model.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FTSS_Model.Entities.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Carts");

                    b.Navigation("Missions");

                    b.Navigation("Orders");

                    b.Navigation("Otps");

                    b.Navigation("SetupPackages");
                });

            modelBuilder.Entity("FTSS_Model.Entities.Voucher", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
